services:

  config:
    container_name: "config"
    build: ./config-server
    networks:
      - backend

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.7.2
    ports:
      - "2181:2181"
    networks:
      - backend

  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - backend
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: bitnami/kafka:3.3.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - backend

  kafka-setup:
    container_name: kafka-setup
    image: bitnami/kafka:3.3.2
    depends_on:
        - kafka
    command:
      - bash
      - -c
      - |
        echo "Waiting for Kafka to come online..."
        until printf "" 2>> /dev/null >>/dev/tcp/kafka/9092; do sleep 1; done
        kafka-topics.sh --create --if-not-exists --bootstrap-server kafka:9092 --partitions 3 --replication-factor 1 --topic update_school
        echo "Kafka is alive..."

  discovery:
    container_name: "discovery"
    build: ./discovery
    ports:
      - "8761:8761"
    depends_on:
      - config
    networks:
      - backend
    restart: unless-stopped

  gateway:
    container_name: "gateway"
    build: ./gateway
    ports:
      - "8222:8222"
    depends_on:
        - config
    networks:
      - backend
    restart: unless-stopped

  student:
    container_name: "student"
    build: ./student
    depends_on:
      - postgresql
      - config
      - kafka
      - discovery
    networks:
      - backend
    restart: unless-stopped

  school:
    container_name: "school"
    build: ./school
    depends_on:
      - postgresql
      - config
      - kafka
      - discovery
    networks:
      - backend
    restart: unless-stopped

  scope:
    image: weaveworks/scope:latest
    container_name: weave-scope
    hostname: weave-scope
    pid: "host"
    privileged: true
    ports:
      - "4040:4040"
    expose:
      - "4040"
    labels:
      - "works.weave.role=system"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
    command:
      - "--probe.docker"
      - "true"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres:
  pgadmin: